version: '3.8'

services:
  db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - transcendence

  redis:
    image: "redis:latest"
    volumes:
      - redis_data:/data
    networks:
      - transcendence

  web:
    build: ./web
    user: django
    command: ./entrypoint.sh db gunicorn backend.transcendence.wsgi:application --bind 0.0.0.0:8000 --log-level=debug

    volumes:
      - staticfiles:/usr/src/app/staticfiles
      - mediafiles:/usr/src/app/media
      - avatars:/usr/src/app/avatars
    networks:
      - transcendence
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - PYTHONPATH=/usr/src/app/backend


  nginx:
    build: ./nginx
    volumes:
      - staticfiles:/usr/share/nginx/html/static
      - mediafiles:/usr/share/nginx/html/media
      - ./web/frontend:/usr/share/nginx/html
    networks:
      - transcendence
    ports:
      - "8443:443"
    depends_on:
      - web

networks:
  transcendence:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  staticfiles:
  mediafiles:
  avatars:
  frontend:
    driver: local
    driver_opts:
      type: none
      device: ./web/frontend
      o: bind
